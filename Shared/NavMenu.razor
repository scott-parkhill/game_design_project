@using Chaos.Models.DbModels
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject UserManager<GameUser> userManager
@inject AuthenticationStateProvider authenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Dolphins vs. Pirates</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <p class="navbar-brand ms-3" style="color: white"><i>@user?.UserName</i></p>
        </div>
    </nav>
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @if (user is not null)
        {
            if (claims.Any(u => u.Value == "Admin"))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="sandbox">
                        <span class="oi oi-plus" aria-hidden="true"></span> Sandbox
                    </NavLink>
                </div>
            }

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="army-dashboard">
                    <span class="oi oi-book" aria-hidden="true"></span> Army Dashboard
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="armoury">
                    <span class="oi oi-eyedropper" aria-hidden="true"></span> Armoury
                </NavLink>
            </div>
            
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="battle-centre">
                    <span class="oi oi-aperture" aria-hidden="true"></span> Battle Centre
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="account/logout">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }

        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="oi oi-pencil" aria-hidden="true"></span> Register
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-minus" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
    </nav>
</div>

@code
{
    [CascadingParameter] protected Task<AuthenticationState> AuthState { get; set; } = null!;
    [CascadingParameter(Name = "LoggedUserId")] protected string LoggedUserId { get; set; } = null!;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    bool collapseNavMenu;
    GameUser? user;
    List<Claim?> claims = new();

    protected override async Task OnInitializedAsync()
    {
        user = await userManager.FindByIdAsync(LoggedUserId);

        if (user is not null)
        {
            var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
            claims = authState.User.Claims.Where(u => u.Type == ClaimTypes.Role).ToList();
        }
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
